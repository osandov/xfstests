#! /bin/bash
# SPDX-License-Identifier: GPL-2.0
# Copyright (c) 2019 Omar Sandoval.  All Rights Reserved.
#
# FS QA Test 184
#
# Create files with preallocated extents in various patterns and send them with
# btrfs send --stream-version 2. Test for "Btrfs: send, use fallocate for
# preallocated extents and holes".
#
seq=`basename $0`
seqres=$RESULT_DIR/$seq
echo "QA output created by $seq"

here=`pwd`
tmp=/tmp/$$
status=1	# failure is the default!
trap "_cleanup; exit \$status" 0 1 2 3 15

_cleanup()
{
	cd /
	rm -f $tmp.*
}

# get standard environment, filters and checks
. ./common/rc
. ./common/filter
. ./common/punch

# remove previous $seqres.full before test
rm -f $seqres.full

_supported_fs btrfs
_supported_os Linux
_require_scratch
_require_xfs_io_command fiemap
_require_xfs_io_command fpunch
_require_btrfs_send_stream_version 2

_scratch_mkfs >> $seqres.full 2>&1
_scratch_mount

_run_btrfs_util_prog subvolume create "$SCRATCH_MNT/subvol"

$XFS_IO_PROG -f -c "falloc 0 $((128 * 512))" "$SCRATCH_MNT/subvol/prealloc"

$XFS_IO_PROG -f -c "truncate $((128 * 512))" \
	-c "falloc -k 0 $((32 * 512))" \
	-c "falloc -k $((64 * 512)) $((32 * 512))" \
	"$SCRATCH_MNT/subvol/prealloc_with_holes"

$XFS_IO_PROG -f -c "truncate $((128 * 512))" \
	-c "falloc -k $((128 * 512)) $((32 * 512))" \
	-c "falloc -k $((256 * 512)) $((32 * 512))" \
	"$SCRATCH_MNT/subvol/prealloc_beyond_eof"

$XFS_IO_PROG -f -c "truncate $((128 * 512))" \
	-c "falloc -k $((96 * 512)) $((64 * 512))" \
	"$SCRATCH_MNT/subvol/prealloc_straddles_eof"

$XFS_IO_PROG -f -c "pwrite 0 $((128 * 512))" \
	-c "fpunch $((64 * 512)) $((32 * 512))" \
	-c "falloc -k $((128 * 512)) $((32 * 512))" \
	-c "falloc -k $((192 * 512)) $((32 * 512))" \
	"$SCRATCH_MNT/subvol/data_and_hole_and_prealloc" | _filter_xfs_io

_run_btrfs_util_prog subvolume snapshot -r "$SCRATCH_MNT/subvol" "$SCRATCH_MNT/snap"
_run_btrfs_util_prog send --stream-version 2 -f "$tmp.send" "$SCRATCH_MNT/snap"

_scratch_unmount
_check_scratch_fs

_scratch_mkfs >> $seqres.full 2>&1
_scratch_mount

_run_btrfs_util_prog receive -f "$tmp.send" "$SCRATCH_MNT"

md5sum "$SCRATCH_MNT/snap/prealloc" | _filter_scratch
$XFS_IO_PROG -r -c "fiemap -v" "$SCRATCH_MNT/snap/prealloc" | _filter_fiemap
md5sum "$SCRATCH_MNT/snap/prealloc_with_holes" | _filter_scratch
$XFS_IO_PROG -r -c "fiemap -v" "$SCRATCH_MNT/snap/prealloc_with_holes" \
	| _filter_fiemap
md5sum "$SCRATCH_MNT/snap/prealloc_beyond_eof" | _filter_scratch
$XFS_IO_PROG -r -c "fiemap -v" "$SCRATCH_MNT/snap/prealloc_beyond_eof" \
	| _filter_fiemap
md5sum "$SCRATCH_MNT/snap/prealloc_straddles_eof" | _filter_scratch
$XFS_IO_PROG -r -c "fiemap -v" "$SCRATCH_MNT/snap/prealloc_straddles_eof" \
	| _filter_fiemap
md5sum "$SCRATCH_MNT/snap/data_and_hole_and_prealloc" | _filter_scratch
$XFS_IO_PROG -r -c "fiemap -v" "$SCRATCH_MNT/snap/data_and_hole_and_prealloc" \
	| _filter_fiemap

status=0
exit
